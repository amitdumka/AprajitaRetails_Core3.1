// <auto-generated />
using System;
using AprajitaRetails.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AprajitaRetails.Migrations
{
    [DbContext(typeof(AprajitaRetailsContext))]
    [Migration("20200921162306_EmpUser")]
    partial class EmpUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AprajitaRetails.Areas.Accounts.Models.BasicLedgerEntry", b =>
                {
                    b.Property<int>("BasicLedgerEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountIn")
                        .HasColumnType("money");

                    b.Property<decimal>("AmountOut")
                        .HasColumnType("money");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("ReferanceId")
                        .HasColumnType("int");

                    b.HasKey("BasicLedgerEntryId");

                    b.HasIndex("PartyId");

                    b.ToTable("BasicLedgerEntries");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Accounts.Models.LedgerMaster", b =>
                {
                    b.Property<int>("LedgerMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LedgerCategory")
                        .HasColumnType("int");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.HasKey("LedgerMasterId");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("Masters");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Accounts.Models.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LedgerCategory")
                        .HasColumnType("int");

                    b.Property<decimal>("OpenningBalance")
                        .HasColumnType("money");

                    b.Property<DateTime>("OpenningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.AddressBook.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Admin.Models.RegisteredUser", b =>
                {
                    b.Property<int>("RegisteredUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUserLoggedIn")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegisteredUserId");

                    b.ToTable("RegisteredUsers");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimaryCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecondaryCategory")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Categorys")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<string>("HSNCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<int?>("MainCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("ProductItemId");

                    b.HasIndex("BrandId");

                    b.HasIndex("MainCategoryCategoryId");

                    b.HasIndex("ProductCategoryCategoryId");

                    b.HasIndex("ProductTypeCategoryId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.ProductPurchase", b =>
                {
                    b.Property<int>("ProductPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InWardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InWardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("money");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalBasicAmount")
                        .HasColumnType("money");

                    b.Property<double>("TotalQty")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("money");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductPurchaseId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierID");

                    b.ToTable("ProductPurchases");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.PurchaseItem", b =>
                {
                    b.Property<int>("PurchaseItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<decimal>("CostValue")
                        .HasColumnType("money");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductPurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseTaxTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<decimal>("TaxAmout")
                        .HasColumnType("money");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("PurchaseItemId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("ProductPurchaseId");

                    b.HasIndex("PurchaseTaxTypeId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.PurchaseTaxType", b =>
                {
                    b.Property<int>("PurchaseTaxTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CompositeRate")
                        .HasColumnType("money");

                    b.Property<string>("TaxName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxType")
                        .HasColumnType("int");

                    b.HasKey("PurchaseTaxTypeId");

                    b.ToTable("PurchaseTaxTypes");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<double>("PurchaseQty")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("SaleQty")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("StockID");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("StoreId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SuppilerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.CardPaymentDetail", b =>
                {
                    b.Property<int>("CardPaymentDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("AuthCode")
                        .HasColumnType("int");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<int>("LastDigit")
                        .HasColumnType("int");

                    b.Property<int>("SaleInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("CardPaymentDetailId");

                    b.ToTable("CardPaymentDetail");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SaleInvoice", b =>
                {
                    b.Property<int>("SaleInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RoundOffAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalBillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasColumnType("money");

                    b.Property<int>("TotalItems")
                        .HasColumnType("int");

                    b.Property<double>("TotalQty")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalTaxAmount")
                        .HasColumnType("money");

                    b.HasKey("SaleInvoiceId");

                    b.ToTable("SaleInvoices");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SaleItem", b =>
                {
                    b.Property<int>("SaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BasicAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<int>("SaleInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("SaleTaxTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SalesPersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("money");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("SaleItemId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("SaleInvoiceId");

                    b.HasIndex("SaleTaxTypeId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SalePaymentDetail", b =>
                {
                    b.Property<int>("SalePaymentDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("CardAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("MixAmount")
                        .HasColumnType("money");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.HasKey("SalePaymentDetailId");

                    b.ToTable("SalePaymentDetail");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SaleTaxType", b =>
                {
                    b.Property<int>("SaleTaxTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CompositeRate")
                        .HasColumnType("money");

                    b.Property<string>("TaxName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxType")
                        .HasColumnType("int");

                    b.HasKey("SaleTaxTypeId");

                    b.ToTable("SaleTaxTypes");

                    b.HasData(
                        new
                        {
                            SaleTaxTypeId = 1,
                            CompositeRate = 5m,
                            TaxName = "Local Output GST@ 5%  ",
                            TaxType = 0
                        },
                        new
                        {
                            SaleTaxTypeId = 2,
                            CompositeRate = 12m,
                            TaxName = "Local Output GST@ 12%  ",
                            TaxType = 0
                        },
                        new
                        {
                            SaleTaxTypeId = 3,
                            CompositeRate = 5m,
                            TaxName = "Output IGST@ 5%  ",
                            TaxType = 3
                        },
                        new
                        {
                            SaleTaxTypeId = 4,
                            CompositeRate = 12m,
                            TaxName = "Output IGST@ 12%  ",
                            TaxType = 3
                        },
                        new
                        {
                            SaleTaxTypeId = 5,
                            CompositeRate = 5m,
                            TaxName = "Output Vat@ 12%  ",
                            TaxType = 4
                        },
                        new
                        {
                            SaleTaxTypeId = 6,
                            CompositeRate = 12m,
                            TaxName = "Output VAT@ 5%  ",
                            TaxType = 4
                        },
                        new
                        {
                            SaleTaxTypeId = 7,
                            CompositeRate = 5m,
                            TaxName = "Output Vat Free  ",
                            TaxType = 4
                        });
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SalesPerson", b =>
                {
                    b.Property<int>("SalesPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SalesmanName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesPersonId");

                    b.ToTable("SalesPerson");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.CardDetail", b =>
                {
                    b.Property<int>("CardDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("AuthCode")
                        .HasColumnType("int");

                    b.Property<int>("CardCode")
                        .HasColumnType("int");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LastDigit")
                        .HasColumnType("int");

                    b.HasKey("CardDetailId");

                    b.HasIndex("InvoiceNo")
                        .IsUnique()
                        .HasFilter("[InvoiceNo] IS NOT NULL");

                    b.ToTable("CardDetails");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.HSN", b =>
                {
                    b.Property<long>("HSNCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CESS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("HSNCode");

                    b.ToTable("HSNList");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.PaymentDetail", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CardAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsManualBill")
                        .HasColumnType("bit");

                    b.Property<decimal>("MixAmount")
                        .HasColumnType("money");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<int>("PaymentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("InvoiceNo");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.RegularInvoice", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsManualBill")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegularInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("RoundOffAmount")
                        .HasColumnType("money");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasColumnType("money");

                    b.Property<int>("TotalItems")
                        .HasColumnType("int");

                    b.Property<double>("TotalQty")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalTaxAmount")
                        .HasColumnType("money");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StoreId");

                    b.ToTable("RegularInvoices");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.RegularSaleItem", b =>
                {
                    b.Property<int>("RegularSaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BasicAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<long?>("HSNCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("HSNCode1")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<int?>("SaleTaxTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("money");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("RegularSaleItemId");

                    b.HasIndex("HSNCode1");

                    b.HasIndex("InvoiceNo1");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("SaleTaxTypeId");

                    b.HasIndex("SalesmanId");

                    b.ToTable("RegularSaleItems");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.ToDo.Models.FileInfo", b =>
                {
                    b.Property<Guid>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("TodoId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.ToDo.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Added")
                        .HasColumnName("Added")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DueTo")
                        .HasColumnName("DueTo")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FileTodoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnName("Tags")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("FileTodoId");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.BookEntry", b =>
                {
                    b.Property<int>("BookEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<bool>("IsConsumed")
                        .HasColumnType("bit");

                    b.Property<int>("LedgerBy")
                        .HasColumnType("int");

                    b.Property<int>("LedgerTo")
                        .HasColumnType("int");

                    b.Property<string>("Naration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("BookEntryId");

                    b.ToTable("ImportBookEntries");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportInWard", b =>
                {
                    b.Property<int>("ImportInWardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InWardDate")
                        .HasColumnType("DateTime2");

                    b.Property<string>("InWardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("DateTime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDataConsumed")
                        .HasColumnType("bit");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalMRPValue")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalQty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ImportInWardId");

                    b.HasIndex("StoreId");

                    b.ToTable("ImportInWards");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportPurchase", b =>
                {
                    b.Property<int>("ImportPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<decimal>("CostValue")
                        .HasColumnType("money");

                    b.Property<DateTime>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRNNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDataConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatBill")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<decimal>("MRPValue")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxAmt")
                        .HasColumnType("money");

                    b.HasKey("ImportPurchaseId");

                    b.HasIndex("StoreId");

                    b.ToTable("ImportPurchases");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportSaleItemWise", b =>
                {
                    b.Property<int>("ImportSaleItemWiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BasicRate")
                        .HasColumnType("money");

                    b.Property<decimal>("BillAmnt")
                        .HasColumnType("money");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CGST")
                        .HasColumnType("money");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<string>("HSNCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDataConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatBill")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("money");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<decimal>("RoundOff")
                        .HasColumnType("money");

                    b.Property<decimal>("SGST")
                        .HasColumnType("money");

                    b.Property<string>("Saleman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("money");

                    b.HasKey("ImportSaleItemWiseId");

                    b.HasIndex("StoreId");

                    b.ToTable("ImportSaleItemWises");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportSaleRegister", b =>
                {
                    b.Property<int>("ImportSaleRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasicRate")
                        .HasColumnType("money");

                    b.Property<decimal>("BillAmnt")
                        .HasColumnType("money");

                    b.Property<decimal>("Discount")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConsumed")
                        .HasColumnType("bit");

                    b.Property<decimal>("MRP")
                        .HasColumnType("money");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<decimal>("RoundOff")
                        .HasColumnType("money");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("money");

                    b.HasKey("ImportSaleRegisterId");

                    b.HasIndex("StoreId");

                    b.ToTable("ImportSaleRegisters");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Voyager.Models.ArvindPayment", b =>
                {
                    b.Property<int>("ArvindPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("Arvind")
                        .HasColumnType("int");

                    b.Property<string>("BankDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArvindPaymentId");

                    b.ToTable("ArvindPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Voyager.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfBills")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Age = 0,
                            City = "Dumka",
                            CreatedDate = new DateTime(2020, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(2020, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Cash",
                            Gender = 0,
                            LastName = "Sale",
                            MobileNo = "1234567890",
                            NoOfBills = 0,
                            TotalAmount = 0m
                        },
                        new
                        {
                            CustomerId = 2,
                            Age = 0,
                            City = "Dumka",
                            CreatedDate = new DateTime(2020, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(2020, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Card",
                            Gender = 0,
                            LastName = "Sale",
                            MobileNo = "1234567890",
                            NoOfBills = 0,
                            TotalAmount = 0m
                        });
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Voyager.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GSTNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfEmployees")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PanNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreManagerPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("AprajitaRetails.Models.AccountNumber", b =>
                {
                    b.Property<int>("AccountNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.HasKey("AccountNumberId");

                    b.HasIndex("BankId");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EntryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTailoring")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AprajitaRetails.Models.AttendanceVM", b =>
                {
                    b.Property<int>("AttendanceVMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDataConsumed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTailoring")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StoreCode")
                        .HasColumnType("int");

                    b.HasKey("AttendanceVMId");

                    b.ToTable("AttendancesImport");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankId = 1,
                            BankName = "SBI"
                        },
                        new
                        {
                            BankId = 2,
                            BankName = "ICICI"
                        },
                        new
                        {
                            BankId = 3,
                            BankName = "Bandhan Bank"
                        },
                        new
                        {
                            BankId = 4,
                            BankName = "PNB"
                        },
                        new
                        {
                            BankId = 5,
                            BankName = "BOB"
                        },
                        new
                        {
                            BankId = 6,
                            BankName = "Axis"
                        },
                        new
                        {
                            BankId = 7,
                            BankName = "HDFC"
                        });
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankAccountInfo", b =>
                {
                    b.Property<int>("BankAccountInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFSCCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClientAccount")
                        .HasColumnType("bit");

                    b.HasKey("BankAccountInfoId");

                    b.HasIndex("BankId");

                    b.ToTable("BankAccountInfos");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankAccountSecurityInfo", b =>
                {
                    b.Property<int>("BankAccountSecurityInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ATMCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ATMPin")
                        .HasColumnType("int");

                    b.Property<int>("CVVNo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TPIN")
                        .HasColumnType("int");

                    b.Property<string>("TaxPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankAccountSecurityInfoId");

                    b.ToTable("AccountSecurityInfos");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankDeposit", b =>
                {
                    b.Property<int>("BankDepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumberId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("DepoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankDepositId");

                    b.HasIndex("AccountNumberId");

                    b.HasIndex("StoreId");

                    b.ToTable("BankDeposits");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankWithdrawal", b =>
                {
                    b.Property<int>("BankWithdrawalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumberId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InNameOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankWithdrawalId");

                    b.HasIndex("AccountNumberId");

                    b.HasIndex("StoreId");

                    b.ToTable("BankWithdrawals");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashDetail", b =>
                {
                    b.Property<int>("CashDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("C10")
                        .HasColumnType("int");

                    b.Property<int>("C100")
                        .HasColumnType("int");

                    b.Property<int>("C1000")
                        .HasColumnType("int");

                    b.Property<int>("C20")
                        .HasColumnType("int");

                    b.Property<int>("C2000")
                        .HasColumnType("int");

                    b.Property<int>("C5")
                        .HasColumnType("int");

                    b.Property<int>("C50")
                        .HasColumnType("int");

                    b.Property<int>("C500")
                        .HasColumnType("int");

                    b.Property<int>("Coin1")
                        .HasColumnType("int");

                    b.Property<int>("Coin10")
                        .HasColumnType("int");

                    b.Property<int>("Coin2")
                        .HasColumnType("int");

                    b.Property<int>("Coin5")
                        .HasColumnType("int");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("CashDetailId");

                    b.HasIndex("StoreId");

                    b.ToTable("CashDetail");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInBank", b =>
                {
                    b.Property<int>("CashInBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CIBDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CashIn")
                        .HasColumnType("money");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("money");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("money");

                    b.Property<decimal>("OpenningBalance")
                        .HasColumnType("money");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("CashInBankId");

                    b.HasIndex("CIBDate")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("CashInBanks");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInHand", b =>
                {
                    b.Property<int>("CashInHandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CIHDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CashIn")
                        .HasColumnType("money");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("money");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("money");

                    b.Property<decimal>("OpenningBalance")
                        .HasColumnType("money");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("CashInHandId");

                    b.HasIndex("CIHDate")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("CashInHands");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashPayment", b =>
                {
                    b.Property<int>("CashPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("PaidTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TranscationModeId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashPaymentId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TranscationModeId");

                    b.ToTable("CashPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashReceipt", b =>
                {
                    b.Property<int>("CashReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("InwardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TranscationModeId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashReceiptId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TranscationModeId");

                    b.ToTable("CashReceipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.ChequesLog", b =>
                {
                    b.Property<int>("ChequesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChequesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClearedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDepositedOnAprajitaRetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIssuedByAprajitaRetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPDC")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChequesLogId");

                    b.ToTable("ChequesLogs");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CurrentSalary", b =>
                {
                    b.Property<int>("CurrentSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncentiveRate")
                        .HasColumnType("money");

                    b.Property<decimal>("IncentiveTarget")
                        .HasColumnType("money");

                    b.Property<bool>("IsEffective")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSundayBillable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTailoring")
                        .HasColumnType("bit");

                    b.Property<decimal>("LPRate")
                        .HasColumnType("money");

                    b.Property<decimal>("SundaySalary")
                        .HasColumnType("money");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WOWBillRate")
                        .HasColumnType("money");

                    b.Property<decimal>("WOWBillTarget")
                        .HasColumnType("money");

                    b.HasKey("CurrentSalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CurrentSalaries");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DailySale", b =>
                {
                    b.Property<int>("DailySaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManualBill")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMatchedWithVOy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaleReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTailoringBill")
                        .HasColumnType("bit");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DailySaleId");

                    b.HasIndex("SalesmanId");

                    b.HasIndex("StoreId");

                    b.ToTable("DailySales");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DueRecoverd", b =>
                {
                    b.Property<int>("DueRecoverdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("money");

                    b.Property<int>("DuesListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialPayment")
                        .HasColumnType("bit");

                    b.Property<int>("Modes")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DueRecoverdId");

                    b.HasIndex("DuesListId");

                    b.HasIndex("StoreId");

                    b.ToTable("DueRecoverds");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DuesList", b =>
                {
                    b.Property<int>("DuesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("DailySaleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialRecovery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecovered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RecoveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("DuesListId");

                    b.HasIndex("DailySaleId");

                    b.HasIndex("StoreId");

                    b.ToTable("DuesLists");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<bool?>("IsTailors")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AprajitaRetails.Models.EmployeeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeUsers");
                });

            modelBuilder.Entity("AprajitaRetails.Models.EndOfDay", b =>
                {
                    b.Property<int>("EndOfDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<decimal>("CashInHand")
                        .HasColumnType("money");

                    b.Property<DateTime>("EOD_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FM_Arrow")
                        .HasColumnType("int");

                    b.Property<int>("RWT")
                        .HasColumnType("int");

                    b.Property<float>("Shirting")
                        .HasColumnType("real");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<float>("Suiting")
                        .HasColumnType("real");

                    b.Property<int>("USPA")
                        .HasColumnType("int");

                    b.HasKey("EndOfDayId");

                    b.HasIndex("EOD_Date")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("EndOfDays");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.MonthEnd", b =>
                {
                    b.Property<int>("MonthEndId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAccess")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalAmountAccess")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalAmountFabric")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalAmountOthers")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalAmountRMZ")
                        .HasColumnType("money");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCashExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDues")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDuesOfMonth")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDuesRecovered")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalExpenses")
                        .HasColumnType("money");

                    b.Property<double>("TotalFabric")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalHomeExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalInward")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalInwardByAmitKumar")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalInwardOthers")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOnBookExpenes")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOtherExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOtherHomeExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOtherIncome")
                        .HasColumnType("money");

                    b.Property<double>("TotalOthers")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("money");

                    b.Property<double>("TotalRMZ")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalRecipts")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSaleIncome")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalTailoringExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalTailoringIncome")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalTrimsAndOtherExpenses")
                        .HasColumnType("money");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MonthEndId");

                    b.HasIndex("StoreId");

                    b.ToTable("MonthEnds");
                });

            modelBuilder.Entity("AprajitaRetails.Models.OnlineSale", b =>
                {
                    b.Property<int>("OnlineSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnlineVendorId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitValue")
                        .HasColumnType("money");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VendorFee")
                        .HasColumnType("money");

                    b.Property<decimal>("VoyagerAmount")
                        .HasColumnType("money");

                    b.Property<string>("VoyagerInvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoygerDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OnlineSaleId");

                    b.HasIndex("OnlineVendorId");

                    b.ToTable("OnlineSale");
                });

            modelBuilder.Entity("AprajitaRetails.Models.OnlineSaleReturn", b =>
                {
                    b.Property<int>("OnlineSaleReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRecived")
                        .HasColumnType("bit");

                    b.Property<int>("OnlineSaleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VoyagerAmount")
                        .HasColumnType("money");

                    b.Property<string>("VoyagerInvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoygerDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OnlineSaleReturnId");

                    b.HasIndex("OnlineSaleId")
                        .IsUnique();

                    b.ToTable("OnlineSaleReturns");
                });

            modelBuilder.Entity("AprajitaRetails.Models.OnlineVendor", b =>
                {
                    b.Property<int>("OnlineVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OnlineVendorId");

                    b.ToTable("OnlineVendor");
                });

            modelBuilder.Entity("AprajitaRetails.Models.PaySlip", b =>
                {
                    b.Property<int>("PaySlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdvanceDeducations")
                        .HasColumnType("money");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("money");

                    b.Property<int?>("CurrentSalaryId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("money");

                    b.Property<bool?>("IsTailoring")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastPCsIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("LastPcsAmount")
                        .HasColumnType("money");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDaysPresent")
                        .HasColumnType("int");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OtherDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("OthersIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("PFDeductions")
                        .HasColumnType("money");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaleIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("StandardDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("TDSDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSale")
                        .HasColumnType("money");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WOWBillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("WOWBillIncentive")
                        .HasColumnType("money");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PaySlipId");

                    b.HasIndex("CurrentSalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PaySlips");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentPartry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("StoreId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.PettyCashExpense", b =>
                {
                    b.Property<int>("PettyCashExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PettyCashExpenseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("PettyCashExpenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecieptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecieptSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptId");

                    b.HasIndex("StoreId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.SalaryPayment", b =>
                {
                    b.Property<int>("SalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryComponet")
                        .HasColumnType("int");

                    b.Property<string>("SalaryMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalaryPaymentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("SalaryPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Salesman", b =>
                {
                    b.Property<int>("SalesmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SalesmanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("StoreLocationId")
                        .HasColumnType("int");

                    b.HasKey("SalesmanId");

                    b.HasIndex("StoreId");

                    b.ToTable("Salesmen");

                    b.HasData(
                        new
                        {
                            SalesmanId = 1,
                            SalesmanName = "Sanjeev Mishra",
                            StoreId = 1,
                            StoreLocationId = 0
                        },
                        new
                        {
                            SalesmanId = 2,
                            SalesmanName = "Mukesh Mandal",
                            StoreId = 1,
                            StoreLocationId = 0
                        },
                        new
                        {
                            SalesmanId = 3,
                            SalesmanName = "Manager",
                            StoreId = 1,
                            StoreLocationId = 0
                        },
                        new
                        {
                            SalesmanId = 4,
                            SalesmanName = "Bikash Kumar Sah",
                            StoreId = 1,
                            StoreLocationId = 0
                        });
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvancePayment", b =>
                {
                    b.Property<int>("StaffAdvancePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDataMoved")
                        .HasColumnType("bit");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffAdvancePaymentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("StaffAdvancePayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvanceReceipt", b =>
                {
                    b.Property<int>("StaffAdvanceReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffAdvanceReceiptId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("StaffAdvanceReceipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.SuspenseAccount", b =>
                {
                    b.Property<int>("SuspenseAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClearedDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsCleared")
                        .HasColumnType("bit");

                    b.Property<decimal>("OutAmount")
                        .HasColumnType("money");

                    b.Property<string>("ReferanceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuspenseAccountId");

                    b.ToTable("Suspenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringBooking", b =>
                {
                    b.Property<int>("TalioringBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BundiPrice")
                        .HasColumnType("money");

                    b.Property<int>("BundiQty")
                        .HasColumnType("int");

                    b.Property<decimal>("CoatPrice")
                        .HasColumnType("money");

                    b.Property<int>("CoatQty")
                        .HasColumnType("int");

                    b.Property<string>("CustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<decimal>("KurtaPrice")
                        .HasColumnType("money");

                    b.Property<int>("KurtaQty")
                        .HasColumnType("int");

                    b.Property<int>("Others")
                        .HasColumnType("int");

                    b.Property<decimal>("OthersPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("PantPrice")
                        .HasColumnType("money");

                    b.Property<int>("PantQty")
                        .HasColumnType("int");

                    b.Property<decimal>("ShirtPrice")
                        .HasColumnType("money");

                    b.Property<int>("ShirtQty")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("TryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TalioringBookingId");

                    b.HasIndex("StoreId");

                    b.ToTable("TalioringBookings");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringDelivery", b =>
                {
                    b.Property<int>("TalioringDeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TalioringBookingId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TalioringDeliveryId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TalioringBookingId");

                    b.ToTable("TailoringDeliveries");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TelegramAuthUser", b =>
                {
                    b.Property<int>("TelegramAuthUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpType")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelegramChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelegramUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TelegramAuthUserId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TelegramAuthUsers");
                });

            modelBuilder.Entity("AprajitaRetails.Models.ToDoMessage", b =>
                {
                    b.Property<int>("ToDoMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOver")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToDoMessageId");

                    b.ToTable("ToDoMessages");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TranscationMode", b =>
                {
                    b.Property<int>("TranscationModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Transcation")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TranscationModeId");

                    b.HasIndex("Transcation")
                        .IsUnique()
                        .HasFilter("[Transcation] IS NOT NULL");

                    b.ToTable("TranscationModes");

                    b.HasData(
                        new
                        {
                            TranscationModeId = 1,
                            Transcation = "Home Expenses"
                        },
                        new
                        {
                            TranscationModeId = 2,
                            Transcation = "Other Home Expenses"
                        },
                        new
                        {
                            TranscationModeId = 3,
                            Transcation = "Mukesh(Home Staff)"
                        },
                        new
                        {
                            TranscationModeId = 4,
                            Transcation = "Amit Kumar"
                        },
                        new
                        {
                            TranscationModeId = 5,
                            Transcation = "Amit Kumar Expenses"
                        },
                        new
                        {
                            TranscationModeId = 6,
                            Transcation = "CashIn"
                        },
                        new
                        {
                            TranscationModeId = 7,
                            Transcation = "CashOut"
                        },
                        new
                        {
                            TranscationModeId = 8,
                            Transcation = "Regular"
                        });
                });

            modelBuilder.Entity("AprajitaRetails.Models.ViewModels.IncomeExpensesReport", b =>
                {
                    b.Property<int>("IncomeExpensesReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCashPayments")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalCashRecipts")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDues")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalHomeExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalManualSale")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOtherIncome")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalOthersExpenses")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalPendingDues")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalRecipts")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalRecovery")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSale")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalStaffPayments")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalTailoringPayments")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalTailoringSale")
                        .HasColumnType("money");

                    b.HasKey("IncomeExpensesReportId");

                    b.ToTable("IncomeExpensesReport");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Accounts.Models.BasicLedgerEntry", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Accounts.Models.Party", "Party")
                        .WithMany("BasicLedgers")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Accounts.Models.LedgerMaster", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Accounts.Models.Party", "Party")
                        .WithOne("LedgerMaster")
                        .HasForeignKey("AprajitaRetails.Areas.Accounts.Models.LedgerMaster", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.ProductItem", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.Brand", "BrandName")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.Category", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategoryCategoryId");

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.Category", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryCategoryId");

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.Category", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeCategoryId");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.ProductPurchase", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("ProductPurchases")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.Supplier", "Supplier")
                        .WithMany("ProductPurchases")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.PurchaseItem", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.ProductItem", "ProductItem")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.ProductPurchase", "ProductPurchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductPurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.PurchaseTaxType", "PurchaseTaxType")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseTaxTypeId");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Purchase.Models.Stock", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.ProductItem", "ProductItem")
                        .WithMany()
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("Stocks")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.CardPaymentDetail", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SalePaymentDetail", "SalePaymentDetail")
                        .WithOne("CardDetails")
                        .HasForeignKey("AprajitaRetails.Areas.Sales.Models.CardPaymentDetail", "CardPaymentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SaleItem", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.ProductItem", "ProductItem")
                        .WithMany()
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SaleInvoice", "SaleInvoice")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SaleTaxType", "SaleTaxType")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleTaxTypeId");

                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SalesPerson", "Salesman")
                        .WithMany("SaleItems")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.SalePaymentDetail", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SaleInvoice", "SaleInvoice")
                        .WithOne("PaymentDetail")
                        .HasForeignKey("AprajitaRetails.Areas.Sales.Models.SalePaymentDetail", "SalePaymentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.CardDetail", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Sales.Models.Views.PaymentDetail", "PaymentDetail")
                        .WithOne("CardDetail")
                        .HasForeignKey("AprajitaRetails.Areas.Sales.Models.Views.CardDetail", "InvoiceNo");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.PaymentDetail", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Sales.Models.Views.RegularInvoice", "Invoice")
                        .WithOne("PaymentDetail")
                        .HasForeignKey("AprajitaRetails.Areas.Sales.Models.Views.PaymentDetail", "InvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.RegularInvoice", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Sales.Models.Views.RegularSaleItem", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Sales.Models.Views.HSN", "HSN")
                        .WithMany("RegularSaleItems")
                        .HasForeignKey("HSNCode1");

                    b.HasOne("AprajitaRetails.Areas.Sales.Models.Views.RegularInvoice", "Invoice")
                        .WithMany("SaleItems")
                        .HasForeignKey("InvoiceNo1");

                    b.HasOne("AprajitaRetails.Areas.Purchase.Models.ProductItem", "ProductItem")
                        .WithMany()
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Sales.Models.SaleTaxType", "SaleTaxType")
                        .WithMany()
                        .HasForeignKey("SaleTaxTypeId");

                    b.HasOne("AprajitaRetails.Models.Salesman", "Salesman")
                        .WithMany("SaleItems")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.ToDo.Models.TodoItem", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.ToDo.Models.FileInfo", "File")
                        .WithMany()
                        .HasForeignKey("FileTodoId");
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportInWard", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("ImportInWards")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportPurchase", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("ImportPurchases")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportSaleItemWise", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("ImportSaleItemWises")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Areas.Uploader.Models.ImportSaleRegister", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("ImportSaleRegisters")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.AccountNumber", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.Attendance", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankAccountInfo", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Bank", "Bank")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankAccountSecurityInfo", b =>
                {
                    b.HasOne("AprajitaRetails.Models.BankAccountInfo", "BankAccountInfo")
                        .WithOne("AccountSecurityInfo")
                        .HasForeignKey("AprajitaRetails.Models.BankAccountSecurityInfo", "BankAccountSecurityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankDeposit", b =>
                {
                    b.HasOne("AprajitaRetails.Models.AccountNumber", "Account")
                        .WithMany("Deposits")
                        .HasForeignKey("AccountNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankWithdrawal", b =>
                {
                    b.HasOne("AprajitaRetails.Models.AccountNumber", "Account")
                        .WithMany("Withdrawals")
                        .HasForeignKey("AccountNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashDetail", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInBank", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("CashInBanks")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInHand", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("CashInHands")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashPayment", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("AprajitaRetails.Models.TranscationMode", "Mode")
                        .WithMany("CashPayments")
                        .HasForeignKey("TranscationModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashReceipt", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("AprajitaRetails.Models.TranscationMode", "Mode")
                        .WithMany("CashReceipts")
                        .HasForeignKey("TranscationModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.CurrentSalary", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("CurrentSalaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.DailySale", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Salesman", "Salesman")
                        .WithMany("DailySales")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("DailySales")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DueRecoverd", b =>
                {
                    b.HasOne("AprajitaRetails.Models.DuesList", "DuesList")
                        .WithMany("Recoverds")
                        .HasForeignKey("DuesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DuesList", b =>
                {
                    b.HasOne("AprajitaRetails.Models.DailySale", "DailySale")
                        .WithMany()
                        .HasForeignKey("DailySaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Employee", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.EmployeeUser", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("AprajitaRetails.Models.EmployeeUser", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.EndOfDay", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Expense", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "PaidBy")
                        .WithMany("Expenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.MonthEnd", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.OnlineSale", b =>
                {
                    b.HasOne("AprajitaRetails.Models.OnlineVendor", "Vendor")
                        .WithMany("OnlineSales")
                        .HasForeignKey("OnlineVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.OnlineSaleReturn", b =>
                {
                    b.HasOne("AprajitaRetails.Models.OnlineSale", "OnlineSale")
                        .WithOne("SaleReturn")
                        .HasForeignKey("AprajitaRetails.Models.OnlineSaleReturn", "OnlineSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.PaySlip", b =>
                {
                    b.HasOne("AprajitaRetails.Models.CurrentSalary", "CurrentSalary")
                        .WithMany("PaySlips")
                        .HasForeignKey("CurrentSalaryId");

                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.Payment", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.PettyCashExpense", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "PaidBy")
                        .WithMany("CashExpenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Receipt", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.SalaryPayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("SalaryPayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Salesman", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany("Salesmen")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvancePayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("AdvancePayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvanceReceipt", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("AdvanceReceipts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringBooking", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringDelivery", b =>
                {
                    b.HasOne("AprajitaRetails.Areas.Voyager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("AprajitaRetails.Models.TalioringBooking", "Booking")
                        .WithMany("Deliveries")
                        .HasForeignKey("TalioringBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TelegramAuthUser", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
