// <auto-generated />
using System;
using AprajitaRetails.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AprajitaRetails.Migrations
{
    [DbContext(typeof(AprajitaRetailsContext))]
    partial class AprajitaRetailsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AprajitaRetails.Models.AccountNumber", b =>
                {
                    b.Property<int>("AccountNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.HasKey("AccountNumberId");

                    b.HasIndex("BankId");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EntryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankDeposit", b =>
                {
                    b.Property<int>("BankDepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumberId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("DepoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankDepositId");

                    b.HasIndex("AccountNumberId");

                    b.ToTable("BankDeposits");
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankWithdrawal", b =>
                {
                    b.Property<int>("BankWithdrawalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumberId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InNameOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankWithdrawalId");

                    b.HasIndex("AccountNumberId");

                    b.ToTable("BankWithdrawals");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInBank", b =>
                {
                    b.Property<int>("CashInBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CIBDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CashInBankId");

                    b.HasIndex("CIBDate")
                        .IsUnique();

                    b.ToTable("CashInBanks");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashInHand", b =>
                {
                    b.Property<int>("CashInHandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CIHDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CashInHandId");

                    b.HasIndex("CIHDate")
                        .IsUnique();

                    b.ToTable("CashInHands");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashPayment", b =>
                {
                    b.Property<int>("CashPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("PaidTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TranscationModeId")
                        .HasColumnType("int");

                    b.HasKey("CashPaymentId");

                    b.HasIndex("TranscationModeId");

                    b.ToTable("CashPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashReceipt", b =>
                {
                    b.Property<int>("CashReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("InwardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TranscationModeId")
                        .HasColumnType("int");

                    b.HasKey("CashReceiptId");

                    b.HasIndex("TranscationModeId");

                    b.ToTable("CashReceipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.ChequesLog", b =>
                {
                    b.Property<int>("ChequesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChequesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClearedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDepositedOnAprajitaRetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIssuedByAprajitaRetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPDC")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChequesLogId");

                    b.ToTable("ChequesLogs");
                });

            modelBuilder.Entity("AprajitaRetails.Models.CurrentSalary", b =>
                {
                    b.Property<int>("CurrentSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("money");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncentiveRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncentiveTarget")
                        .HasColumnType("money");

                    b.Property<bool>("IsEffective")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSundayBillable")
                        .HasColumnType("bit");

                    b.Property<decimal>("LPRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SundaySalary")
                        .HasColumnType("money");

                    b.Property<decimal>("WOWBillRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WOWBillTarget")
                        .HasColumnType("money");

                    b.HasKey("CurrentSalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CurrentSalaries");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DailySale", b =>
                {
                    b.Property<int>("DailySaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManualBill")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaleReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTailoringBill")
                        .HasColumnType("bit");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.HasKey("DailySaleId");

                    b.HasIndex("SalesmanId");

                    b.ToTable("DailySales");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DueRecoverd", b =>
                {
                    b.Property<int>("DueRecoverdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("money");

                    b.Property<int>("DuesListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialPayment")
                        .HasColumnType("bit");

                    b.Property<int>("Modes")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DueRecoverdId");

                    b.HasIndex("DuesListId");

                    b.ToTable("DueRecoverds");
                });

            modelBuilder.Entity("AprajitaRetails.Models.DuesList", b =>
                {
                    b.Property<int>("DuesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DailySaleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialRecovery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecovered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RecoveryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DuesListId");

                    b.HasIndex("DailySaleId");

                    b.ToTable("DuesLists");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AprajitaRetails.Models.EndOfDay", b =>
                {
                    b.Property<int>("EndOfDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<decimal>("CashInHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EOD_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FM_Arrow")
                        .HasColumnType("int");

                    b.Property<int>("RWT")
                        .HasColumnType("int");

                    b.Property<float>("Shirting")
                        .HasColumnType("real");

                    b.Property<float>("Suiting")
                        .HasColumnType("real");

                    b.Property<int>("USPA")
                        .HasColumnType("int");

                    b.HasKey("EndOfDayId");

                    b.HasIndex("EOD_Date")
                        .IsUnique();

                    b.ToTable("EndOfDays");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.MonthEnd", b =>
                {
                    b.Property<int>("MonthEndId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<double>("TotalAccess")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalAmountAccess")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountFabric")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountOthers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountRMZ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCashExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDues")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDuesOfMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDuesRecovered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TotalFabric")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalHomeExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInwardByAmitKumar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInwardOthers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOnBookExpenes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOtherExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOtherHomeExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOtherIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TotalOthers")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TotalRMZ")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalRecipts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSaleIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTailoringExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTailoringIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTrimsAndOtherExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MonthEndId");

                    b.ToTable("MonthEnds");
                });

            modelBuilder.Entity("AprajitaRetails.Models.PaySlip", b =>
                {
                    b.Property<int>("PaySlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdvanceDeducations")
                        .HasColumnType("money");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("money");

                    b.Property<int?>("CurrentSalaryId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("money");

                    b.Property<decimal>("LastPCsIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("LastPcsAmount")
                        .HasColumnType("money");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDaysPresent")
                        .HasColumnType("int");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OtherDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("OthersIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("PFDeductions")
                        .HasColumnType("money");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaleIncentive")
                        .HasColumnType("money");

                    b.Property<decimal>("StandardDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("TDSDeductions")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSale")
                        .HasColumnType("money");

                    b.Property<decimal>("WOWBillAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("WOWBillIncentive")
                        .HasColumnType("money");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PaySlipId");

                    b.HasIndex("CurrentSalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PaySlips");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentPartry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.PettyCashExpense", b =>
                {
                    b.Property<int>("PettyCashExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PettyCashExpenseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PettyCashExpenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecieptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecieptSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.SalaryPayment", b =>
                {
                    b.Property<int>("SalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryComponet")
                        .HasColumnType("int");

                    b.Property<string>("SalaryMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalaryPaymentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalaryPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.Salesman", b =>
                {
                    b.Property<int>("SalesmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SalesmanName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesmanId");

                    b.ToTable("Salesmen");
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvancePayment", b =>
                {
                    b.Property<int>("StaffAdvancePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StaffAdvancePaymentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("StaffAdvancePayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvanceReceipt", b =>
                {
                    b.Property<int>("StaffAdvanceReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StaffAdvanceReceiptId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("StaffAdvanceReceipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.SuspenseAccount", b =>
                {
                    b.Property<int>("SuspenseAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClearedDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsCleared")
                        .HasColumnType("bit");

                    b.Property<decimal>("OutAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferanceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuspenseAccountId");

                    b.ToTable("Suspenses");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailorAttendance", b =>
                {
                    b.Property<int>("TailorAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TailoringEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("TailorAttendanceId");

                    b.HasIndex("TailoringEmployeeId");

                    b.ToTable("TailorAttendances");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringEmployee", b =>
                {
                    b.Property<int>("TailoringEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TailoringEmployeeId");

                    b.ToTable("TailoringEmployees");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringSalaryPayment", b =>
                {
                    b.Property<int>("TailoringSalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryComponet")
                        .HasColumnType("int");

                    b.Property<string>("SalaryMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TailoringEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("TailoringSalaryPaymentId");

                    b.HasIndex("TailoringEmployeeId");

                    b.ToTable("TailoringSalaryPayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringStaffAdvancePayment", b =>
                {
                    b.Property<int>("TailoringStaffAdvancePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TailoringEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("TailoringStaffAdvancePaymentId");

                    b.HasIndex("TailoringEmployeeId");

                    b.ToTable("TailoringStaffAdvancePayments");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringStaffAdvanceReceipt", b =>
                {
                    b.Property<int>("TailoringStaffAdvanceReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TailoringEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("TailoringStaffAdvanceReceiptId");

                    b.HasIndex("TailoringEmployeeId");

                    b.ToTable("TailoringStaffAdvanceReceipts");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringBooking", b =>
                {
                    b.Property<int>("TalioringBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BundiPrice")
                        .HasColumnType("money");

                    b.Property<int>("BundiQty")
                        .HasColumnType("int");

                    b.Property<decimal>("CoatPrice")
                        .HasColumnType("money");

                    b.Property<int>("CoatQty")
                        .HasColumnType("int");

                    b.Property<string>("CustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<decimal>("KurtaPrice")
                        .HasColumnType("money");

                    b.Property<int>("KurtaQty")
                        .HasColumnType("int");

                    b.Property<int>("Others")
                        .HasColumnType("int");

                    b.Property<decimal>("OthersPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("PantPrice")
                        .HasColumnType("money");

                    b.Property<int>("PantQty")
                        .HasColumnType("int");

                    b.Property<decimal>("ShirtPrice")
                        .HasColumnType("money");

                    b.Property<int>("ShirtQty")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("TryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TalioringBookingId");

                    b.ToTable("TalioringBookings");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringDelivery", b =>
                {
                    b.Property<int>("TalioringDeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TalioringBookingId")
                        .HasColumnType("int");

                    b.HasKey("TalioringDeliveryId");

                    b.HasIndex("TalioringBookingId");

                    b.ToTable("TailoringDeliveries");
                });

            modelBuilder.Entity("AprajitaRetails.Models.TranscationMode", b =>
                {
                    b.Property<int>("TranscationModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Transcation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TranscationModeId");

                    b.ToTable("TranscationModes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AprajitaRetails.Models.AccountNumber", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.Attendance", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankDeposit", b =>
                {
                    b.HasOne("AprajitaRetails.Models.AccountNumber", "Account")
                        .WithMany("Deposits")
                        .HasForeignKey("AccountNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.BankWithdrawal", b =>
                {
                    b.HasOne("AprajitaRetails.Models.AccountNumber", "Account")
                        .WithMany("Withdrawals")
                        .HasForeignKey("AccountNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashPayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TranscationMode", "Mode")
                        .WithMany("CashPayments")
                        .HasForeignKey("TranscationModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.CashReceipt", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TranscationMode", "Mode")
                        .WithMany("CashReceipts")
                        .HasForeignKey("TranscationModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.CurrentSalary", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("CurrentSalaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.DailySale", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Salesman", "Salesman")
                        .WithMany("DailySales")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.DueRecoverd", b =>
                {
                    b.HasOne("AprajitaRetails.Models.DuesList", "DuesList")
                        .WithMany("Recoverds")
                        .HasForeignKey("DuesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.DuesList", b =>
                {
                    b.HasOne("AprajitaRetails.Models.DailySale", "DailySale")
                        .WithMany()
                        .HasForeignKey("DailySaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.Expense", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "PaidBy")
                        .WithMany("Expenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.PaySlip", b =>
                {
                    b.HasOne("AprajitaRetails.Models.CurrentSalary", "CurrentSalary")
                        .WithMany("PaySlips")
                        .HasForeignKey("CurrentSalaryId");

                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.PettyCashExpense", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "PaidBy")
                        .WithMany("CashExpenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.SalaryPayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("SalaryPayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvancePayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("AdvancePayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.StaffAdvanceReceipt", b =>
                {
                    b.HasOne("AprajitaRetails.Models.Employee", "Employee")
                        .WithMany("AdvanceReceipts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailorAttendance", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TailoringEmployee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("TailoringEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringSalaryPayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TailoringEmployee", "Employee")
                        .WithMany("SalaryPayments")
                        .HasForeignKey("TailoringEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringStaffAdvancePayment", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TailoringEmployee", "Employee")
                        .WithMany("AdvancePayments")
                        .HasForeignKey("TailoringEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TailoringStaffAdvanceReceipt", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TailoringEmployee", "Employee")
                        .WithMany("AdvanceReceipts")
                        .HasForeignKey("TailoringEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AprajitaRetails.Models.TalioringDelivery", b =>
                {
                    b.HasOne("AprajitaRetails.Models.TalioringBooking", "Booking")
                        .WithMany("Deliveries")
                        .HasForeignKey("TalioringBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
