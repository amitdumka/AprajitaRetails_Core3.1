@model IEnumerable<AprajitaRetails.Areas.Sales.Models.Views.RegularInvoice>

@{
    ViewData["Title"] = "Manual Invoice";
}
@*<br />
    <br />*@
<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <h2 class="panel-title pull-left purple-text" style="margin-left:10px;">
                <strong>Invoice(M)</strong>
            </h2>

        </div>
        <div class="row align-self-lg-end pull-right">
            <button style="margin-right:10px" class="btn btn-outline-green pull-right btn-sm" onclick="addNewOrder()">New Invoice</button>
        </div>
    </div>

    @*Receive All Database Data From Controller And Display Those Data In Client Side*@

    @if (Model.Count() != 0)
    {
        foreach (var item in Model)
        {
    <div class="panel-body">
        <table class="table table-striped table-responsive">
            <thead class="table-danger">
                <tr>
                    <td class="text-primary  font-weight-bold">Customer Name :@item.Customer.FullName  </td>
                    <td>InvNo: @item.InvoiceNo</td>
                    @*<td>Address :  @item.Customer.City </td>*@
                    <td class="text-danger">Invoice Date :@String.Format("{0:dd/MM/yyyy}",item.OnDate.Date) @*@item.OnDate.Date*@</td>
                </tr>
            </thead>
            <tbody class="table-success">
                
                <tr>
                    <td colspan="3">
                        <table class="table table-bordered ">
                            <thead class="bg-success">
                                <tr>
                                    <th>BarCode</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Discount</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white">
                                
                                @{
                                            var totalBill = 0;
                                }
                                @foreach (var order in item.SaleItems)
                                        {
                                <tr>
                                    <td>@order.BarCode</td>

                                    <td>@order.Qty</td>
                                    <td>@order.MRP</td>
                                    <td>@order.Discount</td>
                                    <td>@order.BasicAmount</td>
                                </tr>
                                            totalBill = totalBill + @Convert.ToInt32(order.BasicAmount);
                                        }
                            </tbody>
                        </table>
                        <span class="pull-right text-danger" style="margin-right:45px;"><strong>Total Bill :  </strong> @totalBill</span>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
        }
    }
    else
    {
    <div class="panel-body">
        <h3 style="color:red;">No Invoice!</h3>
    </div>

    }
</div>

@*Desing Bootdtrap Modal With Order Form*@

<div class="modal fade" id="newOrderModal">
    <div class="modal-dialog modal-lg" style=" width: 900px !important;">
        <div class="modal-content">
            <div class="modal-header table-primary">
                <h4 class="text-success">Add New Invoice</h4> <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <form id="NewOrderForm">
                <div class="modal-body">
                    @*Customer Details*@
                    <h5 style="color:#ff6347">Customer Details</h5>
                    <hr />
                    <div class="form-row">
                        <table class="table table-active">
                            <tr>
                                <th>CustomerName</th>
                                <th>MobileNo</th>
                                <th>Address</th>
                                <th>Sale Date</th>
                            </tr>
                            <tr>
                                <td>  <input type="text" id="name" name="name" placeholder=" Name" class="form-control" /></td>
                                <td><input type="text" id="mobileNo" name="mobileNo" placeholder="MobileNo" class="form-control" /></td>
                                <td> <input type="text" id="address" name="address" placeholder=" Address" class="form-control" /></td>
                                <td><input type="date" id="onDate" name="onDate" class="form-control" value="@DateTime.Today" /></td>
                            </tr>

                        </table>
                    </div>
                    @*Order Details*@
                    <h5 style="margin-top:10px;color:#ff6347">Bill Details</h5>
                    <hr />
                    <div class="form-row">
                        <table class="table table-active table-sm">
                            <tr>
                                <th>Total Amount</th>
                                <th>Total Qty</th>
                                <th>Total Discount</th>
                                <th>NoofItem</th>
                            </tr>
                            <tr>
                                <td><input type="number" readonly value="0" id="totalAmount" class="form-control" /></td>
                                <td><input type="number" readonly value="0" id="totalQty" class="form-control" /></td>
                                <td><input type="number" readonly value="0" id="totalDiscount" class="form-control" /></td>
                                <td><input type="number" readonly value="0" id="totalItem" class="form-control" /></td>
                            </tr>
                        </table>

                    </div>

                    @*Order Details*@
                    <h5 style="margin-top:10px;color:#ff6347">Item(s)</h5>
                    <hr />
                    <div>
                        <table>
                            <tr>
                                <th>Salesman</th>
                                <th>BarCode</th>
                                <th></th>
                                <th>ProductName</th>
                                <th>Price</th>
                                <th>Qty</th>

                            </tr>
                            <tr>
                                <td>
                                    <select id="salesMan" name="saleMan" class="form-control">
                                        <option>Select Salesman</option>
                                    </select>
                                </td>
                                <td>
                                    <input type="text" id="barCode" name="barCode" placeholder="BarCode" class="form-control" />
                                </td>
                                <td>
                                    <a id="getBarCode" class="btn btn-sm btn-outline-success">Get</a>
                                </td>
                                <td><input type="text" id="productName" name="productName" placeholder="Product Name" class="form-control" /></td>
                                <td> <input type="number" id="price" name="price" placeholder="Product Price" class="form-control" /></td>
                                <td>  <input type="number" id="quantity" name="quantity" placeholder="Quantity" class="form-control" /></td>

                                <td>
                                    <input type="hidden" id="units" name="units" />
                                    <a id="addToList" name="addToList" class="btn btn-sm btn-outline-primary">Add</a>

                                </td>
                            </tr>
                        </table>
                        <table id="detailsTable" class="table">
                            <thead>
                                <tr>
                                    <th style="width:5%">SM</th>
                                    <th style="width:20%">BarCode</th>
                                    <th style="width:25%">Product</th>
                                    <th style="width:15%">Unit Price</th>
                                    <th style="width:15%">Quantity</th>
                                    <th style="width:15%">Amount</th>
                                    <th style="width:10%">Units</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <hr />
                    <h5 class="purple-text"> Payment Details</h5>
                    <hr />
                    <div>
                        <table class="table table-bordered">
                            <tr>
                                <th>Cash Amount</th>
                                <th>Card Amount</th>
                                <th>CardType</th>
                                <th>CardNo</th>
                                <th>Auth Code</th>
                            </tr>
                            <tr>
                                <td><input type="text" id="cashAmt" name="cashAmt" placeholder="Cash" value="0.0" class="form-control" /></td>
                                <td><input type="text" id="cardAmt" name="cardAmt" placeholder="Card" value="0.0" class="form-control" /></td>
                                <td><input type="text" id="cardType" name="cardType" placeholder="Card Type" value="" class="form-control" /></td>
                                <td><input type="text" id="cardNo" name="cardNo" placeholder="Card No" value="" class="form-control" /></td>
                                <td><input type="text" id="authCode" name="authCode" placeholder="Auth Code" value="" class="form-control" /></td>
                            </tr>

                        </table>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button id="saveOrder" type="submit" class="btn btn-sm btn-danger">Save Order</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script>
        //Show Modal.
        function addNewOrder() {
            $("#newOrderModal").modal();
        }
        //Add Multiple Order.
        $("#addToList").click(function (e) {
            e.preventDefault();

            if ($.trim($("#productName").val()) == "" || $.trim($("#price").val()) == "" || $.trim($("#quantity").val()) == "") {
                alert("Kindly Enter all field(s).");
                return
            };
            if ($.trim($("#productName").val()) == "Not Found") { alert("Kinldy add product!!!."); return; }
            else if ($.trim($("#quantity").val()) == "" || $.trim($("#quantity").val()) == "0") { alert("Kinldy add quantity."); return;  }

            var productName = $("#productName").val(),
                barcode = $("#barCode").val(),
                price = $("#price").val(),
                quantity = $("#quantity").val(),
                units = $("#units").val(),
                sman = $("#salesMan").val(),
                detailsTableBody = $("#detailsTable tbody");
            var amt = (parseFloat(price) * parseInt(quantity));

            var tamt = parseFloat($("#totalAmount").val()) + amt;
            tamt = Math.round(tamt);//RoundOff
            $("#totalAmount").val(tamt);
            var tqty = parseInt($("#totalQty").val()) + quantity;
            $("#totalQty").val(tqty);
            $("#totalItem").val((parseInt($("#totalItem").val())+1));


            var productItem = '<tr><td>' + sman + '</td><td>' +barcode+'</td><td>' + productName + '</td><td>' + price + '</td><td>' + quantity + '</td><td>' +
                (parseFloat(price) * parseInt(quantity)) + '</td><td>' +units + '</td><td><a data-itemId="0" href="#" class="btn btn-sm btn-outline-danger deleteItem">Remove</a></td></tr>';
            detailsTableBody.append(productItem);
            clearItem();
        });
        $("#getBarCode").click(function (e) {
            e.preventDefault();
            if ($.trim($("#barCode").val()) == "") return;
            var barcode = $("#barCode").val();
            var data = JSON.stringify({
                barCode: barcode
            });

            $.when(getBarCodeData(barcode)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });

        });
        //After Add A New Order In The List, Clear Clean The Form For Add More Order.
        function clearItem() {
            $("#productName").val('');
            $("#price").val('');
            $("#quantity").val('');
            $("#barCode").val('');
        }
        // After Add A New Order In The List, If You Want, You Can Remove It.
        $(document).on('click', 'a.deleteItem', function (e) {
            e.preventDefault();
            var $self = $(this);
            if ($(this).attr('data-itemId') == "0") {
                $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                    $(this).remove();
                });
            }
        });
        //After Click Save Button Pass All Data View To Controller For Save Database

        function getBarCodeData(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'GET',
                url: "/Sales/ManualInvoice/GetBarCode?barcode="+data,
                data: data,
                success: function (result) {
                    //alert(result["productName"]);
                    updateProductDetails(result);
                },
                error: function () { alert("Error!!!");}
            });
        }

        function updateProductDetails(data) {
            $("#price").val(data.mrp);
            $("#quantity").val('0');
            $("#productName").val(data.productName);
            $("#units").val(data.units);

        }
        function saveOrder(data1) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',//'application / x - www - form - urlencoded',
                dataType: 'JSON',
                type: 'POST',
                url: '@Url.Action("SaveOrder", "ManualInvoice")',// "/Sales/ManualInvoice/SaveOrder",
                data: data1,
                success: function (result) {
                    alert(result);
                    location.reload();
                },
                error: function () {
                    alert("Error!");
                }
            });
        }
        //Collect Multiple Order List For Pass To Controller
        $("#saveOrder").click(function (e) {
            e.preventDefault();

            var orderArr = [];
            orderArr.length = 0;

            $.each($("#detailsTable tbody tr"), function () {
                orderArr.push({
                    salesman: $(this).find('td:eq(0)').html(),
                    barcode: $(this).find('td:eq(1)').html(),
                    productName: $(this).find('td:eq(2)').html(),
                    price: $(this).find('td:eq(3)').html(),
                    quantity: $(this).find('td:eq(4)').html(),
                    amount: $(this).find('td:eq(5)').html()
                });
            });

            var payar = {
                cardAmount: $("#cardAmt").val(),
                CashAmount: $("#cashAmt").val(),
                CardType: $("#cardType").val(),
                AuthCode: $("#authCode").val(),
                CardNo: $("#cardNo").val()
            };


            var data = JSON.stringify({
                name: $("#name").val(),
                address: $("#address").val(),
                mobileNo: $("#mobileNo").val(),
                onDate: $("#onDate").val(),
                saleItems: orderArr,
                paymentInfo:payar

            });
            console.log(data);
            $.when(saveOrder(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });
        });


        // Here
        var Salesman=[];
        function LoadSaleman(element) {
            if (Salesman.length == 0) {
                //ajax function for fetch data
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetSalesmanList", "ManualInvoice")',//'/home/GetSalesmanList',
                    success: function (data) {
                        //alert("data");
                        console.log(data);
                        Salesman = data;
                        //render catagory
                        renderSalesman(element);
                    }

                })
            }
            else {
                //render catagory to the element
                renderSalesman(element);
            }
        }

        function renderSalesman(element) {
            var $ele = $(element);
            $ele.empty();
            $ele.append($('<option/>').val('0').text('Select'));
            $.each(Salesman, function (i, val) {
                $ele.append($('<option/>').val(val.salesmanId).text(val.salesmanName));
            })
        }

        LoadSaleman($('#salesMan'));



    </script>
}

@*/*
    var Categories = []
    //fetch categories from database
    function LoadCategory(element) {
        if (Categories.length == 0) {
            //ajax function for fetch data
            $.ajax({
                type: "GET",
                url: '/home/getProductCategories',
                success: function (data) {
                    Categories = data;
                    //render catagory
                    renderCategory(element);
                }
            })
        }
        else {
            //render catagory to the element
            renderCategory(element);
        }
    }

    function renderCategory(element) {
        var $ele = $(element);
        $ele.empty();
        $ele.append($('
    <option />').val('0').text('Select'));
        $.each(Categories, function (i, val) {
            $ele.append($('
    <option />').val(val.CategoryID).text(val.CategortyName));
        })
    }

    //fetch products
    function LoadProduct(categoryDD) {
        $.ajax({
            type: "GET",
            url: "/home/getProducts",
            data: { 'categoryID': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct($(categoryDD).parents('.mycontainer').find('select.product'), data);
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    function renderProduct(element, data) {
        //render product
        var $ele = $(element);
        $ele.empty();
        $ele.append($('
    <option />').val('0').text('Select'));
        $.each(data, function (i, val) {
            $ele.append($('
    <option />').val(val.ProductID).text(val.ProductName));
        })
    }

    $(document).ready(function () {
        //Add button click event
        $('#add').click(function () {
            //validation and add order items
            var isAllValid = true;
            if ($('#productCategory').val() == "0") {
                isAllValid = false;
                $('#productCategory').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#productCategory').siblings('span.error').css('visibility', 'hidden');
            }

            if ($('#product').val() == "0") {
                isAllValid = false;
                $('#product').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#product').siblings('span.error').css('visibility', 'hidden');
            }

            if (!($('#quantity').val().trim() != '' && (parseInt($('#quantity').val()) || 0))) {
                isAllValid = false;
                $('#quantity').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#quantity').siblings('span.error').css('visibility', 'hidden');
            }

            if (!($('#rate').val().trim() != '' && !isNaN($('#rate').val().trim()))) {
                isAllValid = false;
                $('#rate').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#rate').siblings('span.error').css('visibility', 'hidden');
            }

            if (isAllValid) {
                var $newRow = $('#mainrow').clone().removeAttr('id');
                $('.pc', $newRow).val($('#productCategory').val());
                $('.product', $newRow).val($('#product').val());

                //Replace add button with remove button
                $('#add', $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

                //remove id attribute from new clone row
                $('#productCategory,#product,#quantity,#rate,#add', $newRow).removeAttr('id');
                $('span.error', $newRow).remove();
                //append clone row
                $('#orderdetailsItems').append($newRow);

                //clear select data
                $('#productCategory,#product').val('0');
                $('#quantity,#rate').val('');
                $('#orderItemError').empty();
            }

        })

        //remove button click event
        $('#orderdetailsItems').on('click', '.remove', function () {
            $(this).parents('tr').remove();
        });

        $('#submit').click(function () {
            var isAllValid = true;

            //validate order items
            $('#orderItemError').text('');
            var list = [];
            var errorItemCount = 0;
            $('#orderdetailsItems tbody tr').each(function (index, ele) {
                if (
                    $('select.product', this).val() == "0" ||
                    (parseInt($('.quantity', this).val()) || 0) == 0 ||
                    $('.rate', this).val() == "" ||
                    isNaN($('.rate', this).val())
                    ) {
                    errorItemCount++;
                    $(this).addClass('error');
                } else {
                    var orderItem = {
                        ProductID: $('select.product', this).val(),
                        Quantity: parseInt($('.quantity', this).val()),
                        Rate: parseFloat($('.rate', this).val())
                    }
                    list.push(orderItem);
                }
            })

            if (errorItemCount > 0) {
                $('#orderItemError').text(errorItemCount + " invalid entry in order item list.");
                isAllValid = false;
            }

            if (list.length == 0) {
                $('#orderItemError').text('At least 1 order item required.');
                isAllValid = false;
            }

            if ($('#orderNo').val().trim() == '') {
                $('#orderNo').siblings('span.error').css('visibility', 'visible');
                isAllValid = false;
            }
            else {
                $('#orderNo').siblings('span.error').css('visibility', 'hidden');
            }

            if ($('#orderDate').val().trim() == '') {
                $('#orderDate').siblings('span.error').css('visibility', 'visible');
                isAllValid = false;
            }
            else {
                $('#orderDate').siblings('span.error').css('visibility', 'hidden');
            }

            if (isAllValid) {
                var data = {
                    OrderNo: $('#orderNo').val().trim(),
                    OrderDateString: $('#orderDate').val().trim(),
                    Description: $('#description').val().trim(),
                    OrderDetails: list
                }

                $(this).val('Please wait...');

                $.ajax({
                    type: 'POST',
                    url: '/home/save',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (data) {
                        if (data.status) {
                            alert('Successfully saved');
                            //here we will clear the form
                            list = [];
                            $('#orderNo,#orderDate,#description').val('');
                            $('#orderdetailsItems').empty();
                        }
                        else {
                            alert('Error');
                        }
                        $('#submit').val('Save');
                    },
                    error: function (error) {
                        console.log(error);
                        $('#submit').val('Save');
                    }
                });
            }

        });

    });

    LoadCategory($('#productCategory'));
    */*@