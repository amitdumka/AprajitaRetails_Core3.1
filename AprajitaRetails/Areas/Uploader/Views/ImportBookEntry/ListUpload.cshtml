@model PaginatedList<AprajitaRetails.Areas.Uploader.Models.BookEntry>

@{
    ViewData ["Title"] = "Book Entry";
    var ctr = 0;
}

<h2 class="text-danger">Book Entry</h2>
<div class="btn-group btn-group-sm">
    <a class="btn btn-outline-primary" asp-action="ListUpLoad" asp-route-id="101">All</a>
    <a class="btn btn-outline-secondary" asp-action="ListUpLoad" asp-route-id="100">Processed</a>
    <a class="btn btn-outline-warning" asp-action="ListUpLoad" asp-route-id="">Pending</a>

</div>
<hr />

<table class="table table-bordered table-hover table-sm table-striped text-center">
    <thead class="bg-success">
        <tr>
            <th>#</th>
            <th><a asp-action="ListUpload" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault ().OnDate) </a></th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault ().LedgerBy)
            </th>
            <th><a asp-action="ListUpload" asp-route-sortOrder="@ViewData["LedgerToParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault ().LedgerTo) </a></th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault ().Amount)
            </th>
            <th><a asp-action="ListUpload" asp-route-sortOrder="@ViewData["VoucherTypeParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault ().VoucherType)</a></th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault ().Naration)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().IsConsumed)
                </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach ( var item in Model )
        {
            ctr = ctr + 1;
            @if ( item.IsConsumed )
            {
                <tr class="text-danger">
                    <td class="text-danger">@ctr</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OnDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LedgerBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LedgerTo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VoucherType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Naration)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.IsConsumed)
                        </td>*@
                    <td class="btn-group btn-group-sm">
                        <a class="btn btn-info btn-sm" asp-action="Edit" asp-route-id="@item.BookEntryId">Edit</a>
                        <a class="btn btn-warning btn-sm" asp-action="Details" asp-route-id="@item.BookEntryId">Details</a>
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.BookEntryId">Delete</a>
                    </td>
                </tr>



            }
            else
            {
                <tr>
                    <td>@ctr</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OnDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LedgerBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LedgerTo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VoucherType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Naration)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.IsConsumed)
                        </td>*@
                    <td class="btn-group btn-group-sm">
                        <a class="btn btn-info btn-sm" asp-action="Edit" asp-route-id="@item.BookEntryId">Edit</a>
                        <a class="btn btn-warning btn-sm" asp-action="Details" asp-route-id="@item.BookEntryId">Details</a>
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.BookEntryId">Delete</a>
                    </td>
                </tr>


            }
        }
    </tbody>
</table>
@*<partial name="_ModalPop" />*@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav>
    <ul class="pagination pagination-sm ">
        <li class="page-item">
            <a asp-action="ListUpload"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link btn btn-default @prevDisabled">
                Previous
            </a>
        </li>
        
        <li class="page-item">
            <a asp-action="ListUpload"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link btn btn-default @nextDisabled">
                Next
            </a>
        </li>

    </ul>
    <ul class="pagination pagination-circle" > <li><div class="text-danger"></div></li>
        <li class="page-item">
            
            <div class="text-primary right">@Model.PageIndex  of @Model.TotalPages Pages.</div>
        </li>
    </ul>
</nav>
<!-- modal placeholder-->
<div id='myModal' class='modal fade in' tabindex="-1" role="dialog" area-labledby="myModalLable" area-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-notify " role="document" id="modalHead">
        <div class="modal-content card">
            <div class="modal-header card-header">
                <h4 class="modal-title w-100" id="myModalLabel">Modal title</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id='myModalContent' class="modal-body"></div>
            <div class="modal-footer ">
                <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
                @*<button type="submit" class="btn btn-primary btn-sm">Save changes</button>*@
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $(document).on('click', 'a[data_modal]',/* $("a[data_modal]").on("click",*/ function (e) {
                if (this.id == "edit") {
                    $("#myModalLabel").html("Edit Items");
                    $("#modalHead").addClass("modal-warning");
                }
                else if (this.id == "detail") {
                    $("#myModalLabel").html("Detail Items");
                    $("#modalHead").addClass("modal-success");
                }
                else if (this.id == "create") {
                    $("#myModalLabel").html("Create Items");
                    $("#modalHead").addClass("modal-primary");
                }
                else if (this.id == "delete") {
                    $("#myModalLabel").html("Delete Items");
                    $("#modalHead").addClass("modal-info");
                }
                else if (this.id == "info") {
                    $("#myModalLabel").html("Info");
                    $("#modalHead").addClass("modal-info");
                }
                $('#myModalContent').load(this.href, function () {


                    $('#myModal').modal({
                        keyboard: true
                    }, 'show');
                });
                return false;
            });
        });

    </script>
}
