Version 3.0

1) Store Based Data
2) Party Option for Payment, Expenses, Receipt
3) Tailoring and Normal Stuff Combilned in one


/*
https://getbootstrap.com/docs/4.0/components/input-group/
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text">$</span>
  </div>
  <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">
  <div class="input-group-append">
    <span class="input-group-text">.00</span>
  </div>
</div>


<div class="input-group mb-3">
  <div class="input-group-prepend">
    <button class="btn btn-outline-secondary" type="button">Button</button>
  </div>
  <input type="text" class="form-control" placeholder="" aria-label="" aria-describedby="basic-addon1">
</div>

<div class="input-group mb-3">
  <input type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="basic-addon2">
  <div class="input-group-append">
    <button class="btn btn-outline-secondary" type="button">Button</button>
  </div>
</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <button class="btn btn-outline-secondary" type="button">Button</button>
    <button class="btn btn-outline-secondary" type="button">Button</button>
  </div>
  <input type="text" class="form-control" placeholder="" aria-label="" aria-describedby="basic-addon1">
</div>

<div class="input-group">
  <input type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="basic-addon2">
  <div class="input-group-append">
    <button class="btn btn-outline-secondary" type="button">Button</button>
    <button class="btn btn-outline-secondary" type="button">Button</button>
  </div>
</div>


*/






Table migrated
@*/*
    var Categories = []
    //fetch categories from database
    function LoadCategory(element) {
        if (Categories.length == 0) {
            //ajax function for fetch data
            $.ajax({
                type: "GET",
                url: '/home/getProductCategories',
                success: function (data) {
                    Categories = data;
                    //render catagory
                    renderCategory(element);
                }
            })
        }
        else {
            //render catagory to the element
            renderCategory(element);
        }
    }

    function renderCategory(element) {
        var $ele = $(element);
        $ele.empty();
        $ele.append($('
    <option />').val('0').text('Select'));
        $.each(Categories, function (i, val) {
            $ele.append($('
    <option />').val(val.CategoryID).text(val.CategortyName));
        })
    }

    //fetch products
    function LoadProduct(categoryDD) {
        $.ajax({
            type: "GET",
            url: "/home/getProducts",
            data: { 'categoryID': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct($(categoryDD).parents('.mycontainer').find('select.product'), data);
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    function renderProduct(element, data) {
        //render product
        var $ele = $(element);
        $ele.empty();
        $ele.append($('
    <option />').val('0').text('Select'));
        $.each(data, function (i, val) {
            $ele.append($('
    <option />').val(val.ProductID).text(val.ProductName));
        })
    }

    $(document).ready(function () {
        //Add button click event
        $('#add').click(function () {
            //validation and add order items
            var isAllValid = true;
            if ($('#productCategory').val() == "0") {
                isAllValid = false;
                $('#productCategory').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#productCategory').siblings('span.error').css('visibility', 'hidden');
            }

            if ($('#product').val() == "0") {
                isAllValid = false;
                $('#product').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#product').siblings('span.error').css('visibility', 'hidden');
            }

            if (!($('#quantity').val().trim() != '' && (parseInt($('#quantity').val()) || 0))) {
                isAllValid = false;
                $('#quantity').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#quantity').siblings('span.error').css('visibility', 'hidden');
            }

            if (!($('#rate').val().trim() != '' && !isNaN($('#rate').val().trim()))) {
                isAllValid = false;
                $('#rate').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#rate').siblings('span.error').css('visibility', 'hidden');
            }

            if (isAllValid) {
                var $newRow = $('#mainrow').clone().removeAttr('id');
                $('.pc', $newRow).val($('#productCategory').val());
                $('.product', $newRow).val($('#product').val());

                //Replace add button with remove button
                $('#add', $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

                //remove id attribute from new clone row
                $('#productCategory,#product,#quantity,#rate,#add', $newRow).removeAttr('id');
                $('span.error', $newRow).remove();
                //append clone row
                $('#orderdetailsItems').append($newRow);

                //clear select data
                $('#productCategory,#product').val('0');
                $('#quantity,#rate').val('');
                $('#orderItemError').empty();
            }

        })

        //remove button click event
        $('#orderdetailsItems').on('click', '.remove', function () {
            $(this).parents('tr').remove();
        });

        $('#submit').click(function () {
            var isAllValid = true;

            //validate order items
            $('#orderItemError').text('');
            var list = [];
            var errorItemCount = 0;
            $('#orderdetailsItems tbody tr').each(function (index, ele) {
                if (
                    $('select.product', this).val() == "0" ||
                    (parseInt($('.quantity', this).val()) || 0) == 0 ||
                    $('.rate', this).val() == "" ||
                    isNaN($('.rate', this).val())
                    ) {
                    errorItemCount++;
                    $(this).addClass('error');
                } else {
                    var orderItem = {
                        ProductID: $('select.product', this).val(),
                        Quantity: parseInt($('.quantity', this).val()),
                        Rate: parseFloat($('.rate', this).val())
                    }
                    list.push(orderItem);
                }
            })

            if (errorItemCount > 0) {
                $('#orderItemError').text(errorItemCount + " invalid entry in order item list.");
                isAllValid = false;
            }

            if (list.length == 0) {
                $('#orderItemError').text('At least 1 order item required.');
                isAllValid = false;
            }

            if ($('#orderNo').val().trim() == '') {
                $('#orderNo').siblings('span.error').css('visibility', 'visible');
                isAllValid = false;
            }
            else {
                $('#orderNo').siblings('span.error').css('visibility', 'hidden');
            }

            if ($('#orderDate').val().trim() == '') {
                $('#orderDate').siblings('span.error').css('visibility', 'visible');
                isAllValid = false;
            }
            else {
                $('#orderDate').siblings('span.error').css('visibility', 'hidden');
            }

            if (isAllValid) {
                var data = {
                    OrderNo: $('#orderNo').val().trim(),
                    OrderDateString: $('#orderDate').val().trim(),
                    Description: $('#description').val().trim(),
                    OrderDetails: list
                }

                $(this).val('Please wait...');

                $.ajax({
                    type: 'POST',
                    url: '/home/save',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (data) {
                        if (data.status) {
                            alert('Successfully saved');
                            //here we will clear the form
                            list = [];
                            $('#orderNo,#orderDate,#description').val('');
                            $('#orderdetailsItems').empty();
                        }
                        else {
                            alert('Error');
                        }
                        $('#submit').val('Save');
                    },
                    error: function (error) {
                        console.log(error);
                        $('#submit').val('Save');
                    }
                });
            }

        });

    });

    LoadCategory($('#productCategory'));
    */*@

