{
  "?xml": { "@version": "1.0" },
  "root": {
    "bill": {
      "type": "REGULAR",
      "bill_number": "C33IN2000174",
      "billing_time": "19/10/2020 18:42:34",
      "WalletPaymentId": "",
      "WalletPaymentWalletId": "",
      "bill_client_id": "_GUID_",
      "bill_store_id": "JHC0006",
      "bill_amount": "916.55",
      "bill_gross_amount": "779",
      "balancepoints_add": "0",
      "bill_discount": "137.55",
      "line_items": {
        "line_item": {
          "line_item_type": "REGULAR",
          "serial": "1",
          "item_code": "M55359401008",
          "qty": "1.4",
          "rate": "655",
          "value": "917",
          "discount_value": "137.55",
          "amount": "760.89",
          "description": "Cotton Shirting"
        }
      },
      "customer": {
        "name": "",
        "mobile": ""
      },
      "Custom_fields": {
        "field_details": {
          "field_name": "Tailoring",
          "tailoring_req": "N"
        }
      },
      "Payment_Mode": {
        "Payment_detail": {
          "payment": [
            {
              "mode": "CA",
              "value": "779",
              "notes": "",
              "attributes": {
                "attribute": {
                  "name": "",
                  "value": ""
                }
              }
            },
            {
              "mode": "mw",
              "value": "0.0"
            }
          ]
        }
      }
    }
  }
}


//Exception Message:Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'AprajitaRetails.Models.JsonData.Line_Item[]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
//To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.
//Path 'root.bill.line_items.line_item.line_item_type', line 1, position 368.


//StackTrace:   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
//   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
//   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
//   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
//   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
//   at AprajitaRetailsWatcher.Ops.JsonUploader.UpLoadXMLFile(String fileName) in C:\Users\thear\Documents\GitHub\AprajitaRetails_Core3.1\AprajitaRetailsWatcher\Ops\JsonUploader.cs:line 118
//   at AprajitaRetailsWatcher.VoyWatcher.FileWatcher_Changed(Object sender, FileSystemEventArgs e) in C:\Users\thear\Documents\GitHub\AprajitaRetails_Core3.1\AprajitaRetailsWatcher\VoyWatcher.cs:line 53


//InnerException:

